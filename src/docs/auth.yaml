paths:
  /api/auth/google:
    get:
      summary: Authenticate with Google
      tags:
        - Login
      description:
        Initiates the authentication process with Google OAuth 2.0. Users will be redirected to Google's authentication
        page to log in.
      responses:
        '302':
          description: Redirects the user to Google's authentication page
      security: []

  /api/auth/login:
    post:
      summary: User Login
      tags:
        - Login
      description: Authenticate user email and password and generate access token
      requestBody:
        description: User credentials for authentication
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                password:
                  type: string
                  description: User's password
      responses:
        200:
          description: Successful login
          schema:
            type: object
            properties:
              message:
                type: string
                description: Success message
              accessToken:
                type: string
                description: Access token for authentication
        400:
          description: Invalid request parameters
        404:
          description: User not found or incorrect credentials
        500:
          description: Internal server error
  /api/auth/{token}/otp:
    post:
      summary: 'Endpoint to verify OTP sent to you'
      tags:
        - Login
      parameters:
        - in: path
          name: token
          required: true
          type: string
      description: OTP code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                otp:
                  type: string
      responses:
        200:
          description: 'Get new to token for login'
        404:
          description: 'No user sent token'
        400:
          description: 'OTP Enter is wrong'
        403:
          description: 'Token expired'

  /api/auth/forgot-password:
    post:
      summary: Request Password Reset
      tags:
        - Login
      description: |
        Allows users to request a password reset link. The user must provide their email address. If the user exists, a password reset link will be sent to the provided email.
      requestBody:
        description: User's email address to request a password reset link
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
      responses:
        200:
          description: Password reset link sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  message:
                    type: string
                    description: Confirmation message indicating the email was sent
        404:
          description: User with this email does not exist
        500:
          description: Internal server error

  /api/auth/reset-password/{token}:
    post:
      summary: Reset Password
      tags:
        - Login
      description: |
        Allows users to reset their password using a valid token received in the password reset link. The token is passed as a URL parameter, and the new password is provided by the user in the request body.
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
          description: Token received for resetting password via email
      requestBody:
        description: New password to be set for the user
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
                  description: User's new password
      responses:
        200:
          description: Password reset successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  message:
                    type: string
                    description: Confirmation message indicating the password reset was successful
        404:
          description: Password reset token is invalid or has expired, or user does not exist
        500:
          description: Internal server error

  /api/auth/update-password:
    put:
      summary: Update user password
      description: Updates the password of the authenticated user.
      security:
        - bearerAuth: []
      tags:
        - Login
      requestBody:
        description: Update the password of the authenticated user
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                  example: old_password123!
                newPassword:
                  type: string
                  example: NewPassw0rd!
      responses:
        '200':
          description: Successfully upated user password
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Successfully updated user password!
        '400':
          description: Invalid input or old password incorrect
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: The old password is incorrect!
                  error:
                    type: string
                    example:
                      Ensuring it contains at least 1 letter, 1 number, and 1 special character, minimum 8 characters
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Internal server error occurred
