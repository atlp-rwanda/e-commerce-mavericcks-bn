paths:
  /api/orders:
    post:
      summary: Create an order
      description: Creates a new order for the authenticated user
      tags:
        - Orders
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderItemIds:
                  type: array
                  items:
                    type: string
                  example: ['item1', 'item2']
                shippingAddress1:
                  type: string
                  example: '123 Main St'
                shippingAddress2:
                  type: string
                  example: 'Apt 4B'
                country:
                  type: string
                  example: 'USA'
                city:
                  type: string
                  example: 'New York'
                phone:
                  type: string
                  example: '123-456-7890'
                zipCode:
                  type: string
                  example: '10001'
              required:
                - orderItemIds
                - shippingAddress1
                - city
                - country
                - phone
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Order created successfully'
                  order:
                    $ref: '#/components/schemas/Order'
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'the following fields are required: ...'
        '404':
          description: No cart found for the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No cart found for this user!'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'error'

    get:
      summary: Get all orders
      description: Retrieves all orders for the authenticated user
      tags:
        - Orders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      orders:
                        type: array
                        items:
                          $ref: '#/components/schemas/Order'
                      orderItems:
                        type: array
                        items:
                          type: object
                          properties:
                            product:
                              $ref: '#/components/schemas/Product'
                            quantity:
                              type: integer
                              example: 2
        '404':
          description: No orders found
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No orders found'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No orders found'

  /api/orders/{id}:
    delete:
      summary: Delete an order
      description: Deletes an order by ID
      tags:
        - Orders
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The order ID
      responses:
        '200':
          description: Order deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Order deleted successfully!'
        '404':
          description: No order found with the given ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No order found with id: ...'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Error deleting Order'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Order:
      type: object
      properties:
        id:
          type: string
          example: 'order1'
        totalPrice:
          type: number
          example: 100.50
        country:
          type: string
          example: 'USA'
        city:
          type: string
          example: 'New York'
        phone:
          type: string
          example: '123-456-7890'
        userId:
          type: string
          example: 'user1'
        shippingAddress1:
          type: string
          example: '123 Main St'
        shippingAddress2:
          type: string
          example: 'Apt 4B'
        zipCode:
          type: string
          example: '10001'
        orderItemIds:
          type: array
          items:
            type: string
          example: ['item1', 'item2']
